<?xml version="1.0" encoding="UTF-8" standalone="no"?><!--
  ~ Copyright(c) 2016-2017 IBM, Red Hat, and others.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  --><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>microprofile-conference</artifactId>
        <groupId>io.microprofile.showcase</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>microservice-session</artifactId>
    <name>Conference :: Session</name>
    <packaging>war</packaging>

    <properties>
        <service.name>${project.artifactId}</service.name>
        <service.name>${project.artifactId}</service.name>
        <service.port>9191</service.port>
        <docker.user>example</docker.user>
        <icon>http://microprofile.io/app/images/logo.png</icon>
    </properties>

    <build>
        <finalName>${project.artifactId}</finalName>

        <plugins>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${version.quarkus}</version>
                <executions>
                  <execution>
                    <goals>
                      <goal>build</goal>
                    </goals>
                  </execution>
                </executions>
              </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>fabric8</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!--This plugin requires that you Docker environment variables are defined correctly, check them with:-->
                        <!--docker-machine env-->
                        <groupId>io.fabric8</groupId>
                        <artifactId>fabric8-maven-plugin</artifactId>
                        <configuration>
                            <mode>kubernetes</mode>
                            <images>
                                <image>
                                    <name>${docker.user}/${project.artifactId}:${project.version}</name>
                                    <build>
                                        <from>TODO DOCKER IMAGE</from>
                                        <assembly>
                                            <basedir>${project.build.directory}/deployment</basedir>
                                            <descriptorRef>artifact</descriptorRef>
                                        </assembly>
                                    </build>
                                    <watch>
                                        <interval>5000</interval>
                                    </watch>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>resource</goal>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>liberty</id>
            <build>
                <plugins>
                   <plugin>
                       <artifactId>maven-resources-plugin</artifactId>
                       <version>3.0.1</version>
                       <executions>
                           <execution>
                             <id>copy-app-to-liberty</id>
                             <phase>package</phase>
                             <goals>
                                 <goal>copy-resources</goal>
                             </goals>
                           </execution>
                       </executions>
                       <configuration>
                           <outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/sessionServer/apps</outputDirectory>
                           <overwrite>true</overwrite>
                           <resources>
                               <resource>
                                 <directory>${project.build.directory}</directory>
                                 <includes>
                                     <include>${warfile.name}.war</include>
                                 </includes>
                               </resource>
                           </resources>
                       </configuration>
                   </plugin>
                   <plugin>
                       <groupId>net.wasdev.wlp.maven.plugins</groupId>
                       <artifactId>liberty-maven-plugin</artifactId>
                       <executions>
                           <execution>
                             <id>create-liberty-server</id>
                             <phase>prepare-package</phase>
                             <goals>
                                 <goal>create-server</goal>
                             </goals>
                           </execution>
                            <execution>
                                <id>package-server</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>package-server</goal>
                                </goals>
                                <configuration>
                                    <packageFile>${project.build.directory}/${project.artifactId}${qualifier.jar}.jar</packageFile>
                                    <include>runnable</include>
                                </configuration>
                            </execution>
                       </executions>
                       <configuration>
                           <serverName>sessionServer</serverName>
                           <assemblyInstallDirectory>${project.build.directory}</assemblyInstallDirectory>
                           <configFile>src/main/liberty/config/server.xml</configFile>
                           <appArchive>${project.build.directory}/${warfile.name}.war</appArchive>
                       </configuration>
                   </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <dependencies>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.12.1</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>io.microprofile.showcase</groupId>
            <artifactId>demo-bootstrap</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-jsonb</artifactId>
        </dependency>
    </dependencies>
</project>
